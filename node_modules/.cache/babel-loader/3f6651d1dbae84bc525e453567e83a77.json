{"ast":null,"code":"var _jsxFileName = \"/home/clara/Bureau/my_events/my_event/src/Components/HomePage.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { getEvents, getPlaces, getCategories } from \"../API/eventAPI\";\nimport NavBar from \"./NavBar\";\nimport DetailModal from \"./DetailModal\";\nimport EventItem from \"./EventItem\";\nimport Filter from \"./Filter\";\nimport LoginModal from \"./LoginModal\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        currEvent: {},\n        det: false\n      });\n    };\n\n    this.handleDetail = e => {\n      const _this$state = this.state,\n            events = _this$state.events,\n            det = _this$state.det;\n      this.setState({\n        currEvent: events.find(elt => elt.id === e.target.id),\n        det: !det\n      });\n    };\n\n    this.handleSetCity = e => {\n      const href = e.target.href;\n      const _this$state2 = this.state,\n            currCat = _this$state2.currCat,\n            places = _this$state2.places;\n      let index = Number(href.substr(href.indexOf(\"#\") + 1));\n      let coord = places[index].geometry.coordinates;\n      this.setState({\n        isLoaded: true,\n        places: [],\n        events: []\n      }, () => {\n        getEvents(\"where=\" + coord[1] + \",\" + coord[0] + \"&within=25&c=\" + currCat).then(res => {\n          this.setState({\n            events: res.data.events.event,\n            isLoaded: false,\n            coords: {\n              longitude: coord[0],\n              latitude: coord[1]\n            },\n            places: []\n          });\n        });\n      });\n      document.getElementById(\"city\").value = e.target.textContent;\n    };\n\n    this.handleCity = e => {\n      const _this$state3 = this.state,\n            coords = _this$state3.coords,\n            currCat = _this$state3.currCat;\n\n      if (e.target.value.length > 2 && coords.longitude && this.cityname.length < e.target.value.length) {\n        getPlaces(\"q=\" + e.target.value + \"&lat=\" + coords.latitude + \"&lon=\" + coords.longitude + \"&c=\" + currCat).then(res => {\n          this.setState({\n            places: res.data.features\n          });\n          console.log(res.data.features);\n        });\n      } else if (e.target.value.length === 0) {\n        this.setState({\n          places: []\n        });\n      }\n\n      this.cityname = e.target.value;\n      e.preventDefault();\n    };\n\n    this.showPosition = position => {\n      const currCat = this.state.currCat;\n      getEvents(\"where=\" + position.coords.latitude + \",\" + position.coords.longitude + \"&within=25&c=\" + currCat).then(res => {\n        this.setState({\n          events: res.data.events.event,\n          isLoaded: false,\n          coords: position.coords\n        });\n      });\n    };\n\n    this.getGeoLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        console.log(\"Not supported\");\n      }\n    };\n\n    this.handleCat = e => {\n      this.setState({\n        isLoaded: true,\n        events: [],\n        currCat: e.target.value\n      }, () => {\n        const _this$state4 = this.state,\n              coords = _this$state4.coords,\n              currCat = _this$state4.currCat;\n        getEvents(\"where=\" + coords.latitude + \",\" + coords.longitude + \"&within=25&c=\" + currCat).then(res => {\n          this.setState({\n            events: res.data.events.event,\n            isLoaded: false\n          });\n        });\n      });\n    };\n\n    this.handleLog = e => {\n      const logMod = this.state.logMod;\n      let sign = false;\n      if (e) sign = e.target.textContent === \"Login\" ? false : true;\n      this.setState({\n        logMod: !logMod,\n        signUp: sign\n      });\n    };\n\n    this.state = {\n      events: [],\n      location: \"paris\",\n      isLoaded: true,\n      currEvent: {},\n      det: false,\n      coords: {},\n      places: [],\n      categories: [],\n      currCat: \"music\",\n      logMod: false,\n      signUp: false\n    };\n    this.cityname = \"\";\n  }\n\n  componentWillMount() {\n    this.getGeoLocation();\n    getCategories().then(res => {\n      this.setState({\n        categories: res.data.category\n      });\n    });\n  }\n\n  render() {\n    const _this$state5 = this.state,\n          events = _this$state5.events,\n          isLoaded = _this$state5.isLoaded,\n          currEvent = _this$state5.currEvent,\n          det = _this$state5.det,\n          places = _this$state5.places,\n          categories = _this$state5.categories,\n          logMod = _this$state5.logMod,\n          signUp = _this$state5.signUp;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      handleLog: this.handleLog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      places: places,\n      handleCity: this.handleCity,\n      handleSetCity: this.handleSetCity,\n      cat: categories,\n      handleCat: this.handleCat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, isLoaded && React.createElement(Row, {\n      className: \"justify-content-center\",\n      style: {\n        margin: \"59px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), events.map((value, key) => React.createElement(EventItem, {\n      handleDetail: this.handleDetail,\n      value: value,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })))), currEvent.id && React.createElement(DetailModal, {\n      show: det,\n      handleClose: this.handleClose,\n      currEvent: currEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(LoginModal, {\n      logShow: logMod,\n      logModal: this.handleLog,\n      signUp: signUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/clara/Bureau/my_events/my_event/src/Components/HomePage.js"],"names":["React","Component","Container","Row","Col","Spinner","getEvents","getPlaces","getCategories","NavBar","DetailModal","EventItem","Filter","LoginModal","HomePage","constructor","props","handleClose","setState","currEvent","det","handleDetail","e","state","events","find","elt","id","target","handleSetCity","href","currCat","places","index","Number","substr","indexOf","coord","geometry","coordinates","isLoaded","then","res","data","event","coords","longitude","latitude","document","getElementById","value","textContent","handleCity","length","cityname","features","console","log","preventDefault","showPosition","position","getGeoLocation","navigator","geolocation","getCurrentPosition","handleCat","handleLog","logMod","sign","signUp","location","categories","componentWillMount","category","render","margin","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { getEvents, getPlaces, getCategories } from \"../API/eventAPI\";\nimport NavBar from \"./NavBar\";\nimport DetailModal from \"./DetailModal\";\nimport EventItem from \"./EventItem\";\nimport Filter from \"./Filter\";\nimport LoginModal from \"./LoginModal\";\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: [],\n            location: \"paris\",\n            isLoaded: true,\n            currEvent: {},\n            det: false,\n            coords: {},\n            places: [],\n            categories: [],\n            currCat: \"music\",\n            logMod: false,\n            signUp: false\n        }\n        this.cityname = \"\";\n    }\n\n    handleClose = () => {\n        this.setState({currEvent: {}, det: false});\n    }\n\n    handleDetail = (e) => {\n        const { events, det } = this.state;\n        this.setState({currEvent: events.find((elt) => elt.id === e.target.id), det: !det});\n    }\n\n    handleSetCity = (e) => {\n        const { href } = e.target;\n        const { currCat, places } = this.state;\n        let index = Number(href.substr(href.indexOf(\"#\")+1));\n        let coord = places[index].geometry.coordinates;\n        this.setState({isLoaded: true, places: [], events: []}, () => {\n            getEvents(\"where=\"+ coord[1] +\",\"+ coord[0] +\"&within=25&c=\"+currCat).then((res) => {\n                this.setState({events: res.data.events.event, isLoaded: false, coords: {longitude: coord[0], latitude: coord[1]}, places: []});\n            });\n        });\n        document.getElementById(\"city\").value = e.target.textContent;\n    }\n\n    handleCity = (e) => {\n        const { coords, currCat } = this.state;\n        if ((e.target.value.length > 2 && coords.longitude) && this.cityname.length < e.target.value.length) {\n             getPlaces(\"q=\"+ e.target.value +\"&lat=\"+ coords.latitude +\"&lon=\"+coords.longitude+\"&c=\"+currCat).then((res) => {\n                 this.setState({places: res.data.features});\n                 console.log(res.data.features);\n             });\n        } else if (e.target.value.length === 0) {\n            this.setState({places: []});\n        }\n        this.cityname = e.target.value;\n        e.preventDefault();\n    }\n\n    showPosition = (position) => {\n        const { currCat } = this.state;\n        getEvents(\"where=\"+ position.coords.latitude +\",\"+ position.coords.longitude +\"&within=25&c=\"+currCat).then((res) => {\n            this.setState({events: res.data.events.event, isLoaded: false, coords: position.coords});\n        });\n    }\n\n    getGeoLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n            console.log(\"Not supported\");\n        }\n    }\n\n    handleCat = (e) => {\n        this.setState({isLoaded: true, events: [], currCat: e.target.value}, () => {\n            const { coords, currCat } = this.state;\n            getEvents(\"where=\"+ coords.latitude +\",\"+ coords.longitude +\"&within=25&c=\"+ currCat).then((res) => {\n                this.setState({ events: res.data.events.event, isLoaded: false });\n            });\n        });\n    }\n\n    handleLog = (e) => {\n        const { logMod } = this.state;\n        let sign = false;\n        if (e)\n            sign = (e.target.textContent === \"Login\") ? false : true;\n        this.setState({ logMod: !logMod, signUp: sign });\n    }\n\n    componentWillMount() {\n        this.getGeoLocation();\n        getCategories().then((res) => {\n            this.setState({categories: res.data.category});\n        });\n    }\n\n    render() {\n        const { events, isLoaded, currEvent, det, places, categories, logMod, signUp } = this.state;\n        return(\n            <div>\n                <NavBar handleLog={this.handleLog}/>\n                <Container fluid>\n                    <Row>\n                        <Col lg=\"4\">\n                            <Filter places={places} handleCity={this.handleCity} handleSetCity={this.handleSetCity} cat={categories} handleCat={this.handleCat}/>\n                        </Col>\n                        <Col lg=\"8\">\n                            { isLoaded &&\n                                <Row className=\"justify-content-center\" style={{margin: \"59px\"}}>\n                                    <Col xs=\"1\">\n                                        <Spinner animation=\"border\" variant=\"danger\" />\n                                    </Col>\n                                </Row>\n                            }\n                            {events.map((value, key) => (\n                                <EventItem handleDetail={this.handleDetail} value={value} key={key}/>\n                            ))}\n                        </Col>\n                    </Row>\n                    {currEvent.id &&\n                        <DetailModal show={det} handleClose={this.handleClose} currEvent={currEvent}/>\n                    }\n                    <LoginModal logShow={logMod} logModal={this.handleLog} signUp={signUp}/>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}